package com.sitech.cntt.metadata.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FortressTestExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public FortressTestExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andAcceptIsNull() {
			addCriterion("ACCEPT is null");
			return (Criteria) this;
		}

		public Criteria andAcceptIsNotNull() {
			addCriterion("ACCEPT is not null");
			return (Criteria) this;
		}

		public Criteria andAcceptEqualTo(String value) {
			addCriterion("ACCEPT =", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptNotEqualTo(String value) {
			addCriterion("ACCEPT <>", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptGreaterThan(String value) {
			addCriterion("ACCEPT >", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptGreaterThanOrEqualTo(String value) {
			addCriterion("ACCEPT >=", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptLessThan(String value) {
			addCriterion("ACCEPT <", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptLessThanOrEqualTo(String value) {
			addCriterion("ACCEPT <=", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptLike(String value) {
			addCriterion("ACCEPT like", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptNotLike(String value) {
			addCriterion("ACCEPT not like", value, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptIn(List<String> values) {
			addCriterion("ACCEPT in", values, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptNotIn(List<String> values) {
			addCriterion("ACCEPT not in", values, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptBetween(String value1, String value2) {
			addCriterion("ACCEPT between", value1, value2, "accept");
			return (Criteria) this;
		}

		public Criteria andAcceptNotBetween(String value1, String value2) {
			addCriterion("ACCEPT not between", value1, value2, "accept");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("REMARK in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("REMARK not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andDspStatusIsNull() {
			addCriterion("DSP_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andDspStatusIsNotNull() {
			addCriterion("DSP_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andDspStatusEqualTo(String value) {
			addCriterion("DSP_STATUS =", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusNotEqualTo(String value) {
			addCriterion("DSP_STATUS <>", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusGreaterThan(String value) {
			addCriterion("DSP_STATUS >", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusGreaterThanOrEqualTo(String value) {
			addCriterion("DSP_STATUS >=", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusLessThan(String value) {
			addCriterion("DSP_STATUS <", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusLessThanOrEqualTo(String value) {
			addCriterion("DSP_STATUS <=", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusLike(String value) {
			addCriterion("DSP_STATUS like", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusNotLike(String value) {
			addCriterion("DSP_STATUS not like", value, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusIn(List<String> values) {
			addCriterion("DSP_STATUS in", values, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusNotIn(List<String> values) {
			addCriterion("DSP_STATUS not in", values, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusBetween(String value1, String value2) {
			addCriterion("DSP_STATUS between", value1, value2, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspStatusNotBetween(String value1, String value2) {
			addCriterion("DSP_STATUS not between", value1, value2, "dspStatus");
			return (Criteria) this;
		}

		public Criteria andDspAcceptIsNull() {
			addCriterion("DSP_ACCEPT is null");
			return (Criteria) this;
		}

		public Criteria andDspAcceptIsNotNull() {
			addCriterion("DSP_ACCEPT is not null");
			return (Criteria) this;
		}

		public Criteria andDspAcceptEqualTo(String value) {
			addCriterion("DSP_ACCEPT =", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptNotEqualTo(String value) {
			addCriterion("DSP_ACCEPT <>", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptGreaterThan(String value) {
			addCriterion("DSP_ACCEPT >", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptGreaterThanOrEqualTo(String value) {
			addCriterion("DSP_ACCEPT >=", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptLessThan(String value) {
			addCriterion("DSP_ACCEPT <", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptLessThanOrEqualTo(String value) {
			addCriterion("DSP_ACCEPT <=", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptLike(String value) {
			addCriterion("DSP_ACCEPT like", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptNotLike(String value) {
			addCriterion("DSP_ACCEPT not like", value, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptIn(List<String> values) {
			addCriterion("DSP_ACCEPT in", values, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptNotIn(List<String> values) {
			addCriterion("DSP_ACCEPT not in", values, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptBetween(String value1, String value2) {
			addCriterion("DSP_ACCEPT between", value1, value2, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspAcceptNotBetween(String value1, String value2) {
			addCriterion("DSP_ACCEPT not between", value1, value2, "dspAccept");
			return (Criteria) this;
		}

		public Criteria andDspPositionIsNull() {
			addCriterion("DSP_POSITION is null");
			return (Criteria) this;
		}

		public Criteria andDspPositionIsNotNull() {
			addCriterion("DSP_POSITION is not null");
			return (Criteria) this;
		}

		public Criteria andDspPositionEqualTo(String value) {
			addCriterion("DSP_POSITION =", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionNotEqualTo(String value) {
			addCriterion("DSP_POSITION <>", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionGreaterThan(String value) {
			addCriterion("DSP_POSITION >", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionGreaterThanOrEqualTo(String value) {
			addCriterion("DSP_POSITION >=", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionLessThan(String value) {
			addCriterion("DSP_POSITION <", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionLessThanOrEqualTo(String value) {
			addCriterion("DSP_POSITION <=", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionLike(String value) {
			addCriterion("DSP_POSITION like", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionNotLike(String value) {
			addCriterion("DSP_POSITION not like", value, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionIn(List<String> values) {
			addCriterion("DSP_POSITION in", values, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionNotIn(List<String> values) {
			addCriterion("DSP_POSITION not in", values, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionBetween(String value1, String value2) {
			addCriterion("DSP_POSITION between", value1, value2, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspPositionNotBetween(String value1, String value2) {
			addCriterion("DSP_POSITION not between", value1, value2, "dspPosition");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeIsNull() {
			addCriterion("DSP_UPDATE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeIsNotNull() {
			addCriterion("DSP_UPDATE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeEqualTo(Date value) {
			addCriterion("DSP_UPDATE_TIME =", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeNotEqualTo(Date value) {
			addCriterion("DSP_UPDATE_TIME <>", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeGreaterThan(Date value) {
			addCriterion("DSP_UPDATE_TIME >", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("DSP_UPDATE_TIME >=", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeLessThan(Date value) {
			addCriterion("DSP_UPDATE_TIME <", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("DSP_UPDATE_TIME <=", value, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeIn(List<Date> values) {
			addCriterion("DSP_UPDATE_TIME in", values, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeNotIn(List<Date> values) {
			addCriterion("DSP_UPDATE_TIME not in", values, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("DSP_UPDATE_TIME between", value1, value2, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andDspUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("DSP_UPDATE_TIME not between", value1, value2, "dspUpdateTime");
			return (Criteria) this;
		}

		public Criteria andStatusCdIsNull() {
			addCriterion("STATUS_CD is null");
			return (Criteria) this;
		}

		public Criteria andStatusCdIsNotNull() {
			addCriterion("STATUS_CD is not null");
			return (Criteria) this;
		}

		public Criteria andStatusCdEqualTo(String value) {
			addCriterion("STATUS_CD =", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdNotEqualTo(String value) {
			addCriterion("STATUS_CD <>", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdGreaterThan(String value) {
			addCriterion("STATUS_CD >", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdGreaterThanOrEqualTo(String value) {
			addCriterion("STATUS_CD >=", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdLessThan(String value) {
			addCriterion("STATUS_CD <", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdLessThanOrEqualTo(String value) {
			addCriterion("STATUS_CD <=", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdLike(String value) {
			addCriterion("STATUS_CD like", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdNotLike(String value) {
			addCriterion("STATUS_CD not like", value, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdIn(List<String> values) {
			addCriterion("STATUS_CD in", values, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdNotIn(List<String> values) {
			addCriterion("STATUS_CD not in", values, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdBetween(String value1, String value2) {
			addCriterion("STATUS_CD between", value1, value2, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusCdNotBetween(String value1, String value2) {
			addCriterion("STATUS_CD not between", value1, value2, "statusCd");
			return (Criteria) this;
		}

		public Criteria andStatusDateIsNull() {
			addCriterion("STATUS_DATE is null");
			return (Criteria) this;
		}

		public Criteria andStatusDateIsNotNull() {
			addCriterion("STATUS_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andStatusDateEqualTo(Date value) {
			addCriterion("STATUS_DATE =", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateNotEqualTo(Date value) {
			addCriterion("STATUS_DATE <>", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateGreaterThan(Date value) {
			addCriterion("STATUS_DATE >", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateGreaterThanOrEqualTo(Date value) {
			addCriterion("STATUS_DATE >=", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateLessThan(Date value) {
			addCriterion("STATUS_DATE <", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateLessThanOrEqualTo(Date value) {
			addCriterion("STATUS_DATE <=", value, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateIn(List<Date> values) {
			addCriterion("STATUS_DATE in", values, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateNotIn(List<Date> values) {
			addCriterion("STATUS_DATE not in", values, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateBetween(Date value1, Date value2) {
			addCriterion("STATUS_DATE between", value1, value2, "statusDate");
			return (Criteria) this;
		}

		public Criteria andStatusDateNotBetween(Date value1, Date value2) {
			addCriterion("STATUS_DATE not between", value1, value2, "statusDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FORTRESS_TEST
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FORTRESS_TEST
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}